#!/bin/bash

# This script was generated by ChatGPT

# Check if the current operating system is Mac
if [ "$(uname)" != "Darwin" ]; then
  echo "Error: this script only works on Mac."
  exit 1
fi

# Check if the brew command exists
if ! which brew > /dev/null 2>&1; then
  # Install brew
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
fi

# Check if the rsync command exists
if ! which rsync > /dev/null 2>&1; then
  # Install rsync using brew
  brew install rsync
fi

# Check if the fswatch command exists
if ! which fswatch > /dev/null 2>&1; then
  # Install fswatch using brew
  brew install fswatch
fi

# Define a common path for iCloud Drive
icloudPath="/Users/$USER/Library/Mobile Documents/com~apple~CloudDocs/dotfiles"

# Define a common path for the user's home directory
userPath="/Users/$USER"

# Define an array of source and destination paths
declare -A paths=(
  ["$userPath/.bashrc"]="$icloudPath/.bashrc"
  ["$userPath/.sensitive.bashrc"]="$icloudPath/.sensitive.bashrc"
  ["$userPath/.bash_profile"]="$icloudPath/.bash_profile"
  ["$userPath/.bash_history"]="$icloudPath/.bash_history"
  ["$userPath/.gitconfig"]="$icloudPath/.gitconfig"
  ["$userPath/.sensitive.gitconfig"]="$icloudPath/.sensitive.gitconfig"
  ["$userPath/.corporation.gitconfig"]="$icloudPath/.corporation.gitconfig"
  ["$userPath/.profile"]="$icloudPath/.profile"
  ["$userPath/.inputrc"]="$icloudPath/.inputrc"
  ["$userPath/.config/sketchybar"]="$icloudPath/.config/"
  ["$userPath/.config/lemonade.toml"]="$icloudPath/.config/lemonade.toml"
  ["$userPath/.config/starship.toml"]="$icloudPath/.config/starship.toml"
  ["$userPath/.config/wezterm"]="$icloudPath/.config/"
  ["$userPath/.config/yabai"]="$icloudPath/.config/"
  ["$userPath/.config/nvim"]="$icloudPath/.config/"
  ["$userPath/.config/sync-dotfiles.sh"]="$icloudPath/.config/sync-dotfiles.sh"
  ["/Library/LaunchAgents/sync-dotfiles.plist"]="$icloudPath/LaunchAgents/sync-dotfiles.plist"
)

# Loop through the array of paths
for srcPath in "${!paths[@]}"; do
  dstPath=${paths[$srcPath]}

  # Sync the source directory to the destination directory
  rsync -avz "$srcPath" "$dstPath"

done

# Monitor the source directory for file changes
# and sync them to the destination directory
fswatch -i 5 "${!paths[@]}" | while read line; do
    rsync -avz "$line" "${paths[$line]}"
done

